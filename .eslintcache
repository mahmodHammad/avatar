[{"/Users/admin/Desktop/solar/src/index.js":"1","/Users/admin/Desktop/solar/src/serviceWorker.js":"2","/Users/admin/Desktop/solar/src/App.js":"3","/Users/admin/Desktop/solar/src/UI.js":"4","/Users/admin/Desktop/solar/src/Cat.js":"5","/Users/admin/Desktop/solar/src/AvatarChange.js":"6","/Users/admin/Desktop/solar/src/setup.js":"7","/Users/admin/Desktop/solar/src/Animate.js":"8","/Users/admin/Desktop/solar/src/helpers.js":"9","/Users/admin/Desktop/solar/src/settings.js":"10","/Users/admin/Desktop/solar/src/ScreenShot.js":"11","/Users/admin/Desktop/solar/src/sceneItems.js":"12","/Users/admin/Desktop/solar/src/ModelLoader.js":"13","/Users/admin/Desktop/solar/src/UI/AvatarChangeColor.js":"14","/Users/admin/Desktop/solar/src/UI/AvatarChangeVisible.js":"15"},{"size":481,"mtime":1617064550418,"results":"16","hashOfConfig":"17"},{"size":5182,"mtime":1617064550460,"results":"18","hashOfConfig":"17"},{"size":248,"mtime":1617912018385,"results":"19","hashOfConfig":"17"},{"size":2438,"mtime":1617749305943,"results":"20","hashOfConfig":"17"},{"size":878,"mtime":1617912018623,"results":"21","hashOfConfig":"17"},{"size":2048,"mtime":1617338637614,"results":"22","hashOfConfig":"17"},{"size":4454,"mtime":1617912019111,"results":"23","hashOfConfig":"17"},{"size":623,"mtime":1617912018379,"results":"24","hashOfConfig":"17"},{"size":846,"mtime":1617356404388,"results":"25","hashOfConfig":"17"},{"size":325,"mtime":1617491278590,"results":"26","hashOfConfig":"17"},{"size":866,"mtime":1617126901785,"results":"27","hashOfConfig":"17"},{"size":4490,"mtime":1617915503142,"results":"28","hashOfConfig":"17"},{"size":1018,"mtime":1617354114569,"results":"29","hashOfConfig":"17"},{"size":1683,"mtime":1617496840145,"results":"30","hashOfConfig":"17"},{"size":1863,"mtime":1617474097065,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"gwidjz",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"34"},"/Users/admin/Desktop/solar/src/index.js",[],["67","68"],"/Users/admin/Desktop/solar/src/serviceWorker.js",[],"/Users/admin/Desktop/solar/src/App.js",[],"/Users/admin/Desktop/solar/src/UI.js",["69","70","71","72"],"import React ,{useState}from \"react\";\nimport \"./App.css\";\nimport AvatarChangeColor from \"./UI/AvatarChangeColor\"\nimport AvatarChangeVisible from \"./UI/AvatarChangeVisible\"\n\nimport BGChange from \"./AvatarChange\"\nimport {render} from \"./setup\"\n\n\nconst hairColors={\n  indigo:0x3D5AFE,\n  red:0xff5050,\n  Purple:0x651FFF,\n  gray:0x282828,\n  lol:0xdc95dc,\n  \"light blue\":0xb4cdff,\n  pink:0xfe5caa,\n  cyan:0x3264c8\n}\nconst faceColors={\n    Skin1:0xc58c85,\n    Skin2:0xecbcb4,\n    Skin3:0xd1a3a4,\n    Skin4:0xa1665e,\n    Skin5:0x503335,\n    Skin6:0x592f2a,\n}\n\nconst clothColors={\n    gray: 0x888888,\n    Green1:0x69F0AE,\n    Purple:0x651FFF,\n    indigo:0x3D5AFE,\n    coolRed:0xFF1744,\n}\n\nconst Colors ={\n  yellow:0xFFEB3B,\n  gray: 0xaaaaaa,\n  Green1:0x69F0AE,\n  cyan:0x00E5FF,\n  Teal:0x1DE9B6,\n  Purple:0x651FFF,\n  indigo:0x3D5AFE,\n  coolRed:0xFF1744,\n  Pink:0xF50057,\n\n};\n\n\n\nvar gluesethair ,gluesetface,gluesetcloth,gluesethat,gluesethair_mask\n\nfunction extract(atrr){\n    console.log(\"HEY YOU FUCK\",atrr)\n    // face = atrr.face\n    \n   const {hair,face,cloth,hat,hair_mask} = atrr\n   console.log(\"XJKL\",face)\n    gluesethair(hair)\n    gluesetface(face)\n    gluesetcloth(cloth)\n    gluesethat(hat)\n    gluesethair_mask(hair_mask)\n    // cloth = atrr.cloth\n    return atrr\n}\n\nfunction UI() {\nconst [hair, sethair] = useState(undefined);\nconst [hat, sethat] = useState(undefined);\nconst [face, setface] = useState(null);\nconst [cloth, setcloth] = useState(undefined);\nconst [hair_mask, sethair_mask] = useState(undefined);\n\ngluesethair =sethair\ngluesetface=setface\ngluesetcloth = setcloth\ngluesethat = sethat\ngluesethair_mask = sethair_mask\n\nconst Allhairs={\n  bold:{visible:[]},\n  hair:{visible:[hair]},\n  hat:{visible:[hat,hair_mask]}\n}\n\n  return (\n      <React.Fragment>\n        <div className=\"l-panel panel\">\n             {/* {hair!==undefined?<AvatarChangeColor title=\"Hair Color\" mesh={hair}   colors={hairColors}/>:null} */}\n\n         {cloth!==undefined?<AvatarChangeColor title=\"Cloth Color\" mesh={cloth} colors={clothColors}/> :null}\n        </div>\n         <div className=\"r-panel panel\">\n            {face!==undefined?  <AvatarChangeColor title=\"Face Color\" mesh={face}  colors={faceColors}/>:null} \n          {/* <AvatarChangeVisible title=\"hair style\" Allmeshes={Allhairs}/> */}\n         <BGChange title=\"Background Color\" mesh={cloth} colors={Colors}/> \n        </div> \n        </React.Fragment>\n  );\n}\n\nexport  {UI,extract};\n\n\n\n\n","/Users/admin/Desktop/solar/src/Cat.js",["73","74","75"],"/Users/admin/Desktop/solar/src/AvatarChange.js",["76","77","78","79","80"],"import React, { useState, useEffect, useRef } from \"react\";\nimport { sceneSetup, scene, changeSceneBackground ,takeScreenshot ,render} from \"./setup\";\n\n\nexport default function AC({ title , mesh , colors  }) {\n  const bgs = {\n    gray: 0xaaaaaa,\n    yellow:0xFFEB3B,\n    Green1:0x69F0AE,\n    cyan:0x00E5FF,\n    Teal:0x1DE9B6,\n    Purple:0x651FFF,\n    indigo:0x3D5AFE,\n    coolRed:0xFF1744,\n    Pink:0xF50057,\n    red: 0xff0000,\n    green: 0x00ff00,\n    blue: 0x0000ff,\n  };\n  const bgsNames = Object.keys(bgs);\n\n  const [activeBGIndex, setactiveBGIndex] = useState(0);\n  useEffect(() => {\n    changeSceneBackground(bgs[bgsNames[activeBGIndex]]);\n  }, []);\n\n  function syencChangeBackground(index) {\n    setactiveBGIndex(index);\n    changeSceneBackground(bgs[bgsNames[index]]);\n    render()\n  }\n\n  function onBGChange(index) {\n    //   index == 1 => left , index==0 => right\n\n    if (index) {\n      activeBGIndex < bgsNames.length - 1\n        ? syencChangeBackground(activeBGIndex + 1)\n        : syencChangeBackground(0);\n    } else {\n        activeBGIndex > 0\n        ? syencChangeBackground(activeBGIndex - 1)\n        : syencChangeBackground(bgsNames.length - 1);\n    }\n  }\n\n  return (\n      \n    <div className=\"box\">\n        <div className=\"title\">{title}</div>\n        <div className=\"change\">\n            <button className=\"l-btn btn\" onClick={()=>onBGChange(0)}>{`<`}</button>\n            <span className=\"center\">{bgsNames[activeBGIndex]}</span>\n            <button className=\"r-btn btn\" onClick={()=>onBGChange(1)}>{`>`}</button>\n        </div>\n    </div>\n    // <div className=\"container\">\n    //   <button onClick={() => onBGChange(0)}>{`<`}</button>\n    //   <span className=\"title\">{bgsNames[activeBGIndex]}</span>\n    //   <button onClick={() => onBGChange(1)}>{`>`}</button>\n      // <button onClick={()=>takeScreenshot(2000 ,2000 )} className=\"SH\">Take SH</button>\n    // </div>\n  );\n}\n\n\n//clean up to prevent memory leak\n//   componentWillUnmount() {\n//     window.cancelAnimationFrame(requestID);\n//     controls.dispose();\n//   }\n","/Users/admin/Desktop/solar/src/setup.js",[],"/Users/admin/Desktop/solar/src/Animate.js",["81","82","83","84"],"/Users/admin/Desktop/solar/src/helpers.js",[],"/Users/admin/Desktop/solar/src/settings.js",[],"/Users/admin/Desktop/solar/src/ScreenShot.js",[],"/Users/admin/Desktop/solar/src/sceneItems.js",[],"/Users/admin/Desktop/solar/src/ModelLoader.js",[],"/Users/admin/Desktop/solar/src/UI/AvatarChangeColor.js",["85","86"],"import * as THREE from \"three\";\nimport React, { useState,useEffect} from \"react\";\nimport { sceneSetup, scene ,render} from \"../setup\";\n\nfunction changeColor(mesh,color){\n  console.log(\"Change color\", mesh)\n  mesh.material.color = new THREE.Color(color)\n}\n\n// changeColor(cloth,0xf07f7f)\n// changeColor(cloth,0x714141)\n// changeColor(hair,0x4e1325)\n// changeColor(face,0xa5977e)\n\nexport default function Cat({ title , mesh , colors  }) {\n  const colNames = Object.keys(colors);\nconsole.log(\"FOOOL\",mesh)\n  const [activeBGIndex, setactiveBGIndex] = useState(0);\n  useEffect(() => {\n    // changeColor(mesh,colors[colNames[activeBGIndex]])\n    // changeSceneBackground(colors[colNames[activeBGIndex]]);\n  }, []);\n\n  function syencChangeBackground(index) {\n    setactiveBGIndex(index);\n    changeColor(mesh,colors[colNames[index]])\n    render()\n\n    // changeSceneBackground(colors[colNames[index]]);\n  }\n\n  function handleChange(index) {\n    //   index == 1 => left , index==0 => right\n\n    if (index) {\n      activeBGIndex < colNames.length - 1\n        ? syencChangeBackground(activeBGIndex + 1)\n        : syencChangeBackground(0);\n    } else {\n        activeBGIndex > 0\n        ? syencChangeBackground(activeBGIndex - 1)\n        : syencChangeBackground(colNames.length - 1);\n    }\n  }\n\n\n  return (\n    \n    <div className=\"box\">\n        <div className=\"title\">{title}</div>\n        <div className=\"change\">\n            <button className=\"l-btn btn\" onClick={()=>handleChange(1)}>{`<`}</button>\n            <span className=\"center\">{colNames[activeBGIndex]}</span>\n            <button className=\"r-btn btn\" onClick={()=>handleChange(0)}>{`>`}</button>\n        </div>\n    </div>\n  );\n}\n","/Users/admin/Desktop/solar/src/UI/AvatarChangeVisible.js",["87","88","89"],"import * as THREE from \"three\";\nimport React, { useState,useEffect} from \"react\";\nimport { sceneSetup, scene ,render} from \"../setup\";\n\nfunction hideAllhair(hairs){\n    const meshNames = Object.keys(hairs);\n     meshNames.forEach(meshname=>{\n      hairs[meshname].visible.forEach(hvisible=> hvisible.visible=false)\n    })    \n  }\n\n  function show(hairs,hair){\n      console.log(hairs,hair)\n    hideAllhair(hairs)\n    hair.visible.forEach(hvisible=>{\n        hvisible.visible=true\n    })\n    render()\n  }\n\nexport default function AvatarVisible({ title , Allmeshes   }) {\n  const meshNames = Object.keys(Allmeshes);\n\n  const [activeMeshIndex, setactiveMeshIndex] = useState(0);\n  useEffect(() => {\n    // changeColor(mesh,Allmeshes[meshNames[activeMeshIndex]])\n    // syencChangeBackground(0)\n    // changeSceneBackground(Allmeshes[meshNames[activeMeshIndex]]);\n  }, []);\n\n  function syencChangeBackground(index) {\n    setactiveMeshIndex(index);\n    show(Allmeshes,Allmeshes[meshNames[index]])\n    render()\n\n    // changeSceneBackground(Allmeshes[meshNames[index]]);\n  }\n\n  function handleChange(index) {\n    //   index == 1 => left , index==0 => right\n    if (index) {\n      activeMeshIndex < meshNames.length - 1\n        ? syencChangeBackground(activeMeshIndex + 1)\n        : syencChangeBackground(0);\n    } else {\n        activeMeshIndex > 0\n        ? syencChangeBackground(activeMeshIndex - 1)\n        : syencChangeBackground(meshNames.length - 1);\n    }\n  }\n\n\n  return (\n    \n    <div className=\"box\">\n        <div className=\"title\">{title}</div>\n        <div className=\"change\">\n            <button className=\"l-btn btn\" onClick={()=>handleChange(1)}>{`<`}</button>\n            <span className=\"center\">{meshNames[activeMeshIndex]}</span>\n            <button className=\"r-btn btn\" onClick={()=>handleChange(0)}>{`>`}</button>\n        </div>\n    </div>\n  );\n}\n",{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":4,"column":8,"nodeType":"96","messageId":"97","endLine":4,"endColumn":27},{"ruleId":"94","severity":1,"message":"98","line":7,"column":9,"nodeType":"96","messageId":"97","endLine":7,"endColumn":15},{"ruleId":"94","severity":1,"message":"99","line":10,"column":7,"nodeType":"96","messageId":"97","endLine":10,"endColumn":17},{"ruleId":"94","severity":1,"message":"100","line":82,"column":7,"nodeType":"96","messageId":"97","endLine":82,"endColumn":15},{"ruleId":"94","severity":1,"message":"101","line":1,"column":17,"nodeType":"96","messageId":"97","endLine":1,"endColumn":25},{"ruleId":"94","severity":1,"message":"102","line":2,"column":22,"nodeType":"96","messageId":"97","endLine":2,"endColumn":27},{"ruleId":"103","severity":1,"message":"104","line":22,"column":76,"nodeType":"105","endLine":22,"endColumn":90},{"ruleId":"94","severity":1,"message":"106","line":1,"column":38,"nodeType":"96","messageId":"97","endLine":1,"endColumn":44},{"ruleId":"94","severity":1,"message":"107","line":2,"column":10,"nodeType":"96","messageId":"97","endLine":2,"endColumn":20},{"ruleId":"94","severity":1,"message":"102","line":2,"column":22,"nodeType":"96","messageId":"97","endLine":2,"endColumn":27},{"ruleId":"94","severity":1,"message":"108","line":2,"column":52,"nodeType":"96","messageId":"97","endLine":2,"endColumn":66},{"ruleId":"109","severity":1,"message":"110","line":25,"column":6,"nodeType":"111","endLine":25,"endColumn":8,"suggestions":"112"},{"ruleId":"94","severity":1,"message":"113","line":3,"column":10,"nodeType":"96","messageId":"97","endLine":3,"endColumn":15},{"ruleId":"94","severity":1,"message":"98","line":3,"column":17,"nodeType":"96","messageId":"97","endLine":3,"endColumn":23},{"ruleId":"94","severity":1,"message":"114","line":3,"column":25,"nodeType":"96","messageId":"97","endLine":3,"endColumn":33},{"ruleId":"94","severity":1,"message":"115","line":4,"column":5,"nodeType":"96","messageId":"97","endLine":4,"endColumn":10},{"ruleId":"94","severity":1,"message":"107","line":3,"column":10,"nodeType":"96","messageId":"97","endLine":3,"endColumn":20},{"ruleId":"94","severity":1,"message":"102","line":3,"column":22,"nodeType":"96","messageId":"97","endLine":3,"endColumn":27},{"ruleId":"94","severity":1,"message":"116","line":1,"column":13,"nodeType":"96","messageId":"97","endLine":1,"endColumn":18},{"ruleId":"94","severity":1,"message":"107","line":3,"column":10,"nodeType":"96","messageId":"97","endLine":3,"endColumn":20},{"ruleId":"94","severity":1,"message":"102","line":3,"column":22,"nodeType":"96","messageId":"97","endLine":3,"endColumn":27},"no-native-reassign",["117"],"no-negated-in-lhs",["118"],"no-unused-vars","'AvatarChangeVisible' is defined but never used.","Identifier","unusedVar","'render' is defined but never used.","'hairColors' is assigned a value but never used.","'Allhairs' is assigned a value but never used.","'useState' is defined but never used.","'scene' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'useRef' is defined but never used.","'sceneSetup' is defined but never used.","'takeScreenshot' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'activeBGIndex', 'bgs', and 'bgsNames'. Either include them or remove the dependency array.","ArrayExpression",["119"],"'stats' is defined but never used.","'controls' is defined but never used.","'clock' is assigned a value but never used.","'THREE' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"120","fix":"121"},"Update the dependencies array to be: [activeBGIndex, bgs, bgsNames]",{"range":"122","text":"123"},[651,653],"[activeBGIndex, bgs, bgsNames]"]