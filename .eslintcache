[{"/Users/admin/Desktop/solar/src/index.js":"1","/Users/admin/Desktop/solar/src/serviceWorker.js":"2","/Users/admin/Desktop/solar/src/App.js":"3","/Users/admin/Desktop/solar/src/UI.js":"4","/Users/admin/Desktop/solar/src/Cat.js":"5","/Users/admin/Desktop/solar/src/AvatarChange.js":"6","/Users/admin/Desktop/solar/src/UI/AvatarChange.js":"7","/Users/admin/Desktop/solar/src/setup.js":"8","/Users/admin/Desktop/solar/src/Animate.js":"9","/Users/admin/Desktop/solar/src/helpers.js":"10","/Users/admin/Desktop/solar/src/settings.js":"11","/Users/admin/Desktop/solar/src/ScreenShot.js":"12","/Users/admin/Desktop/solar/src/sceneItems.js":"13","/Users/admin/Desktop/solar/src/ModelLoader.js":"14"},{"size":481,"mtime":1617064550418,"results":"15","hashOfConfig":"16"},{"size":5182,"mtime":1617064550460,"results":"17","hashOfConfig":"16"},{"size":248,"mtime":1617139549286,"results":"18","hashOfConfig":"16"},{"size":1866,"mtime":1617382502404,"results":"19","hashOfConfig":"16"},{"size":878,"mtime":1617338637614,"results":"20","hashOfConfig":"16"},{"size":2048,"mtime":1617338637614,"results":"21","hashOfConfig":"16"},{"size":1658,"mtime":1617338637615,"results":"22","hashOfConfig":"16"},{"size":3982,"mtime":1617398474065,"results":"23","hashOfConfig":"16"},{"size":623,"mtime":1617338637613,"results":"24","hashOfConfig":"16"},{"size":846,"mtime":1617356404388,"results":"25","hashOfConfig":"16"},{"size":326,"mtime":1617358010434,"results":"26","hashOfConfig":"16"},{"size":866,"mtime":1617126901785,"results":"27","hashOfConfig":"16"},{"size":6466,"mtime":1617399506539,"results":"28","hashOfConfig":"16"},{"size":1018,"mtime":1617354114569,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"gwidjz",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"/Users/admin/Desktop/solar/src/index.js",[],["64","65"],"/Users/admin/Desktop/solar/src/serviceWorker.js",[],"/Users/admin/Desktop/solar/src/App.js",[],"/Users/admin/Desktop/solar/src/UI.js",["66","67","68","69","70","71"],"import React ,{useState}from \"react\";\nimport \"./App.css\";\nimport AvatarChange from \"./UI/AvatarChange\"\nimport BGChange from \"./AvatarChange\"\n\n\n\nconst hairColors={\n  indigo:0x3D5AFE,\n  red:0xff5050,\n  Purple:0x651FFF,\n  gray:0x282828,\n  lol:0xdc95dc,\n  \"light blue\":0xb4cdff,\n  pink:0xfe5caa,\n  cyan:0x3264c8\n}\nconst faceColors={\n    Skin1:0xc58c85,\n    Skin2:0xecbcb4,\n    Skin3:0xd1a3a4,\n    Skin4:0xa1665e,\n    Skin5:0x503335,\n    Skin6:0x592f2a,\n}\n\nconst clothColors={\n    gray: 0x888888,\n    Green1:0x69F0AE,\n    Purple:0x651FFF,\n    indigo:0x3D5AFE,\n    coolRed:0xFF1744,\n}\n\nconst Colors ={\n  yellow:0xFFEB3B,\n  gray: 0xaaaaaa,\n  Green1:0x69F0AE,\n  cyan:0x00E5FF,\n  Teal:0x1DE9B6,\n  Purple:0x651FFF,\n  indigo:0x3D5AFE,\n  coolRed:0xFF1744,\n  Pink:0xF50057,\n\n};\n\nvar gluesethair ,gluesetface,gluesetcloth\n\nfunction extract(atrr){\n    console.log(\"HEY YOU FUCK\",atrr)\n    // face = atrr.face\n    \n   const {hair,face,cloth} = atrr\n    gluesethair(hair)\n    gluesetface(face)\n    gluesetcloth(cloth)\n    // cloth = atrr.cloth\n    return atrr\n}\n\nfunction UI() {\nconst [hair, sethair] = useState(null);\nconst [face, setface] = useState(null);\nconst [cloth, setcloth] = useState(null);\n\ngluesethair =sethair\ngluesetface=setface\ngluesetcloth = setcloth\n\n  return (\n      <React.Fragment>\n        <div className=\"l-panel panel\">\n            {/* {hair!==undefined?<AvatarChange title=\"Hair Color\" mesh={hair}   colors={hairColors}/>:null}\n            {face!==undefined?  <AvatarChange title=\"Face Color\" mesh={face}  colors={faceColors}/>:null} */}\n\n        </div>\n         <div className=\"r-panel panel\">\n         {/* {face!==undefined?<AvatarChange title=\"Cloth Color\" mesh={cloth} colors={clothColors}/> :null} */}\n         <BGChange title=\"Background Color\" mesh={cloth} colors={Colors}/> \n\n        </div> \n        </React.Fragment>\n  );\n}\n\nexport  {UI,extract};\n\n\n\n\n","/Users/admin/Desktop/solar/src/Cat.js",["72","73","74"],"import React, { useState, useEffect, useRef } from \"react\";\nimport { sceneSetup, scene ,takeScreenshot} from \"./setup\";\nimport { startAnimationLoop } from \"./Animate\";\n// import SH from \"./ScreenShoot\"\n\nexport default function Cat({ handleFullScreen }) {\n  const textInput = useRef(null);\n\n  useEffect(() => {\n    const canvasTarget = textInput.current;\n    sceneSetup(canvasTarget);\n    // setInterval(startAnimationLoop,1000)\n    startAnimationLoop()\n    \n  }, []);\n\n  return (\n    <React.Fragment>\n      <div ref={textInput} className=\"canvas\"></div>\n     <div className=\"box\">\n\n      <button className=\"SH\" onClick={()=>takeScreenshot(1028*2 ,1028*2 )} className=\"SH\">Download image</button>\n</div>\n    </React.Fragment>\n  );\n}\n\n//clean up to prevent memory leak\n//   componentWillUnmount() {\n//     window.cancelAnimationFrame(requestID);\n//     controls.dispose();\n//   }\n","/Users/admin/Desktop/solar/src/AvatarChange.js",["75","76","77","78","79"],"import React, { useState, useEffect, useRef } from \"react\";\nimport { sceneSetup, scene, changeSceneBackground ,takeScreenshot ,render} from \"./setup\";\n\n\nexport default function AC({ title , mesh , colors  }) {\n  const bgs = {\n    gray: 0xaaaaaa,\n    yellow:0xFFEB3B,\n    Green1:0x69F0AE,\n    cyan:0x00E5FF,\n    Teal:0x1DE9B6,\n    Purple:0x651FFF,\n    indigo:0x3D5AFE,\n    coolRed:0xFF1744,\n    Pink:0xF50057,\n    red: 0xff0000,\n    green: 0x00ff00,\n    blue: 0x0000ff,\n  };\n  const bgsNames = Object.keys(bgs);\n\n  const [activeBGIndex, setactiveBGIndex] = useState(0);\n  useEffect(() => {\n    changeSceneBackground(bgs[bgsNames[activeBGIndex]]);\n  }, []);\n\n  function syencChangeBackground(index) {\n    setactiveBGIndex(index);\n    changeSceneBackground(bgs[bgsNames[index]]);\n    render()\n  }\n\n  function onBGChange(index) {\n    //   index == 1 => left , index==0 => right\n\n    if (index) {\n      activeBGIndex < bgsNames.length - 1\n        ? syencChangeBackground(activeBGIndex + 1)\n        : syencChangeBackground(0);\n    } else {\n        activeBGIndex > 0\n        ? syencChangeBackground(activeBGIndex - 1)\n        : syencChangeBackground(bgsNames.length - 1);\n    }\n  }\n\n  return (\n      \n    <div className=\"box\">\n        <div className=\"title\">{title}</div>\n        <div className=\"change\">\n            <button className=\"l-btn btn\" onClick={()=>onBGChange(0)}>{`<`}</button>\n            <span className=\"center\">{bgsNames[activeBGIndex]}</span>\n            <button className=\"r-btn btn\" onClick={()=>onBGChange(1)}>{`>`}</button>\n        </div>\n    </div>\n    // <div className=\"container\">\n    //   <button onClick={() => onBGChange(0)}>{`<`}</button>\n    //   <span className=\"title\">{bgsNames[activeBGIndex]}</span>\n    //   <button onClick={() => onBGChange(1)}>{`>`}</button>\n      // <button onClick={()=>takeScreenshot(2000 ,2000 )} className=\"SH\">Take SH</button>\n    // </div>\n  );\n}\n\n\n//clean up to prevent memory leak\n//   componentWillUnmount() {\n//     window.cancelAnimationFrame(requestID);\n//     controls.dispose();\n//   }\n","/Users/admin/Desktop/solar/src/UI/AvatarChange.js",["80","81"],"import * as THREE from \"three\";\nimport React, { useState,useEffect} from \"react\";\nimport { sceneSetup, scene ,render} from \"../setup\";\n\nfunction changeColor(mesh,color){\n  console.log(\"Change color\", mesh)\n  mesh.material.color = new THREE.Color(color)\n}\n\n// changeColor(cloth,0xf07f7f)\n// changeColor(cloth,0x714141)\n// changeColor(hair,0x4e1325)\n// changeColor(face,0xa5977e)\n\nexport default function Cat({ title , mesh , colors  }) {\n  const colNames = Object.keys(colors);\n\n  const [activeBGIndex, setactiveBGIndex] = useState(0);\n  useEffect(() => {\n    // changeColor(mesh,colors[colNames[activeBGIndex]])\n    // changeSceneBackground(colors[colNames[activeBGIndex]]);\n  }, []);\n\n  function syencChangeBackground(index) {\n    setactiveBGIndex(index);\n    changeColor(mesh,colors[colNames[index]])\n    render()\n\n    // changeSceneBackground(colors[colNames[index]]);\n  }\n\n  function handleChange(index) {\n    //   index == 1 => left , index==0 => right\n\n    if (index) {\n      activeBGIndex < colNames.length - 1\n        ? syencChangeBackground(activeBGIndex + 1)\n        : syencChangeBackground(0);\n    } else {\n        activeBGIndex > 0\n        ? syencChangeBackground(activeBGIndex - 1)\n        : syencChangeBackground(colNames.length - 1);\n    }\n  }\n\n\n  return (\n    \n    <div className=\"box\">\n        <div className=\"title\">{title}</div>\n        <div className=\"change\">\n            <button className=\"l-btn btn\" onClick={()=>handleChange(1)}>{`<`}</button>\n            <span className=\"center\">{colNames[activeBGIndex]}</span>\n            <button className=\"r-btn btn\" onClick={()=>handleChange(0)}>{`>`}</button>\n        </div>\n    </div>\n  );\n}\n","/Users/admin/Desktop/solar/src/setup.js",[],"/Users/admin/Desktop/solar/src/Animate.js",["82","83","84"],"// اشطر\nimport * as THREE from \"three\";\nimport { stats, render, controls } from \"./setup\";\nvar clock = new THREE.Clock();\nlet generalTime = 0;\n\n\nlet requestID;\n// this function is heavy , OPTIMIZE it as could as possible\nconst startAnimationLoop = (e) => {\n  //   console.log(\"EEEE:\",e)\n  //   material.uniforms.time.value = e/10000;\n  // console.log(clock.elapsedTime)\n  // stats.begin();\n  // generalTime = clock.elapsedTime;\n\n  render();\n  \n  // controls.update();\n  // stats.end();\n  // requestID = window.requestAnimationFrame(startAnimationLoop);\n};\n\nexport {\n  startAnimationLoop,\n  requestID,\n  generalTime,\n};\n","/Users/admin/Desktop/solar/src/helpers.js",[],"/Users/admin/Desktop/solar/src/settings.js",[],"/Users/admin/Desktop/solar/src/ScreenShot.js",[],"/Users/admin/Desktop/solar/src/sceneItems.js",["85","86"],"/Users/admin/Desktop/solar/src/ModelLoader.js",[],{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":3,"column":8,"nodeType":"93","messageId":"94","endLine":3,"endColumn":20},{"ruleId":"91","severity":1,"message":"95","line":8,"column":7,"nodeType":"93","messageId":"94","endLine":8,"endColumn":17},{"ruleId":"91","severity":1,"message":"96","line":18,"column":7,"nodeType":"93","messageId":"94","endLine":18,"endColumn":17},{"ruleId":"91","severity":1,"message":"97","line":27,"column":7,"nodeType":"93","messageId":"94","endLine":27,"endColumn":18},{"ruleId":"91","severity":1,"message":"98","line":63,"column":8,"nodeType":"93","messageId":"94","endLine":63,"endColumn":12},{"ruleId":"91","severity":1,"message":"99","line":64,"column":8,"nodeType":"93","messageId":"94","endLine":64,"endColumn":12},{"ruleId":"91","severity":1,"message":"100","line":1,"column":17,"nodeType":"93","messageId":"94","endLine":1,"endColumn":25},{"ruleId":"91","severity":1,"message":"101","line":2,"column":22,"nodeType":"93","messageId":"94","endLine":2,"endColumn":27},{"ruleId":"102","severity":1,"message":"103","line":22,"column":76,"nodeType":"104","endLine":22,"endColumn":90},{"ruleId":"91","severity":1,"message":"105","line":1,"column":38,"nodeType":"93","messageId":"94","endLine":1,"endColumn":44},{"ruleId":"91","severity":1,"message":"106","line":2,"column":10,"nodeType":"93","messageId":"94","endLine":2,"endColumn":20},{"ruleId":"91","severity":1,"message":"101","line":2,"column":22,"nodeType":"93","messageId":"94","endLine":2,"endColumn":27},{"ruleId":"91","severity":1,"message":"107","line":2,"column":52,"nodeType":"93","messageId":"94","endLine":2,"endColumn":66},{"ruleId":"108","severity":1,"message":"109","line":25,"column":6,"nodeType":"110","endLine":25,"endColumn":8,"suggestions":"111"},{"ruleId":"91","severity":1,"message":"106","line":3,"column":10,"nodeType":"93","messageId":"94","endLine":3,"endColumn":20},{"ruleId":"91","severity":1,"message":"101","line":3,"column":22,"nodeType":"93","messageId":"94","endLine":3,"endColumn":27},{"ruleId":"91","severity":1,"message":"112","line":3,"column":10,"nodeType":"93","messageId":"94","endLine":3,"endColumn":15},{"ruleId":"91","severity":1,"message":"113","line":3,"column":25,"nodeType":"93","messageId":"94","endLine":3,"endColumn":33},{"ruleId":"91","severity":1,"message":"114","line":4,"column":5,"nodeType":"93","messageId":"94","endLine":4,"endColumn":10},{"ruleId":"91","severity":1,"message":"115","line":4,"column":9,"nodeType":"93","messageId":"94","endLine":4,"endColumn":16},{"ruleId":"91","severity":1,"message":"116","line":15,"column":9,"nodeType":"93","messageId":"94","endLine":15,"endColumn":17},"no-native-reassign",["117"],"no-negated-in-lhs",["118"],"no-unused-vars","'AvatarChange' is defined but never used.","Identifier","unusedVar","'hairColors' is assigned a value but never used.","'faceColors' is assigned a value but never used.","'clothColors' is assigned a value but never used.","'hair' is assigned a value but never used.","'face' is assigned a value but never used.","'useState' is defined but never used.","'scene' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'useRef' is defined but never used.","'sceneSetup' is defined but never used.","'takeScreenshot' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'activeBGIndex', 'bgs', and 'bgsNames'. Either include them or remove the dependency array.","ArrayExpression",["119"],"'stats' is defined but never used.","'controls' is defined but never used.","'clock' is assigned a value but never used.","'extract' is defined but never used.","'amplight' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"120","fix":"121"},"Update the dependencies array to be: [activeBGIndex, bgs, bgsNames]",{"range":"122","text":"123"},[651,653],"[activeBGIndex, bgs, bgsNames]"]