[{"C:\\Users\\pc\\Desktop\\avatar\\src\\index.js":"1","C:\\Users\\pc\\Desktop\\avatar\\src\\App.js":"2","C:\\Users\\pc\\Desktop\\avatar\\src\\serviceWorker.js":"3","C:\\Users\\pc\\Desktop\\avatar\\src\\Cat.js":"4","C:\\Users\\pc\\Desktop\\avatar\\src\\UI.js":"5","C:\\Users\\pc\\Desktop\\avatar\\src\\Animate.js":"6","C:\\Users\\pc\\Desktop\\avatar\\src\\setup.js":"7","C:\\Users\\pc\\Desktop\\avatar\\src\\AvatarChange.js":"8","C:\\Users\\pc\\Desktop\\avatar\\src\\UI\\AvatarChangeColor.js":"9","C:\\Users\\pc\\Desktop\\avatar\\src\\UI\\AvatarChangeVisible.js":"10","C:\\Users\\pc\\Desktop\\avatar\\src\\settings.js":"11","C:\\Users\\pc\\Desktop\\avatar\\src\\helpers.js":"12","C:\\Users\\pc\\Desktop\\avatar\\src\\ScreenShot.js":"13","C:\\Users\\pc\\Desktop\\avatar\\src\\sceneItems.js":"14","C:\\Users\\pc\\Desktop\\avatar\\src\\ModelLoader.js":"15"},{"size":497,"mtime":1617101392502,"results":"16","hashOfConfig":"17"},{"size":265,"mtime":1617272284769,"results":"18","hashOfConfig":"17"},{"size":5326,"mtime":1617101392507,"results":"19","hashOfConfig":"17"},{"size":910,"mtime":1617288050976,"results":"20","hashOfConfig":"17"},{"size":2546,"mtime":1617787753301,"results":"21","hashOfConfig":"17"},{"size":648,"mtime":1618398997832,"results":"22","hashOfConfig":"17"},{"size":6664,"mtime":1618399130840,"results":"23","hashOfConfig":"17"},{"size":2119,"mtime":1617286483117,"results":"24","hashOfConfig":"17"},{"size":1741,"mtime":1617623801416,"results":"25","hashOfConfig":"17"},{"size":1927,"mtime":1617623801417,"results":"26","hashOfConfig":"17"},{"size":343,"mtime":1617623801486,"results":"27","hashOfConfig":"17"},{"size":878,"mtime":1617623801417,"results":"28","hashOfConfig":"17"},{"size":897,"mtime":1617787749284,"results":"29","hashOfConfig":"17"},{"size":4887,"mtime":1618399085363,"results":"30","hashOfConfig":"17"},{"size":1056,"mtime":1617623801415,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1yxg4ng",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"C:\\Users\\pc\\Desktop\\avatar\\src\\index.js",[],["68","69"],"C:\\Users\\pc\\Desktop\\avatar\\src\\App.js",[],"C:\\Users\\pc\\Desktop\\avatar\\src\\serviceWorker.js",[],"C:\\Users\\pc\\Desktop\\avatar\\src\\Cat.js",["70","71","72"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { sceneSetup, scene ,takeScreenshot} from \"./setup\";\r\nimport { startAnimationLoop } from \"./Animate\";\r\n// import SH from \"./ScreenShoot\"\r\n\r\nexport default function Cat({ handleFullScreen }) {\r\n  const textInput = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const canvasTarget = textInput.current;\r\n    sceneSetup(canvasTarget);\r\n    // setInterval(startAnimationLoop,1000)\r\n    startAnimationLoop()\r\n    \r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div ref={textInput} className=\"canvas\"></div>\r\n     <div className=\"box\">\r\n\r\n      <button className=\"SH\" onClick={()=>takeScreenshot(1028*2 ,1028*2 )} className=\"SH\">Download image</button>\r\n</div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\n//clean up to prevent memory leak\r\n//   componentWillUnmount() {\r\n//     window.cancelAnimationFrame(requestID);\r\n//     controls.dispose();\r\n//   }\r\n","C:\\Users\\pc\\Desktop\\avatar\\src\\UI.js",["73","74","75","76"],"import React ,{useState}from \"react\";\r\nimport \"./App.css\";\r\nimport AvatarChangeColor from \"./UI/AvatarChangeColor\"\r\nimport AvatarChangeVisible from \"./UI/AvatarChangeVisible\"\r\n\r\nimport BGChange from \"./AvatarChange\"\r\nimport {render} from \"./setup\"\r\n\r\n\r\nconst hairColors={\r\n  indigo:0x3D5AFE,\r\n  red:0xff5050,\r\n  Purple:0x651FFF,\r\n  gray:0x282828,\r\n  lol:0xdc95dc,\r\n  \"light blue\":0xb4cdff,\r\n  pink:0xfe5caa,\r\n  cyan:0x3264c8\r\n}\r\nconst faceColors={\r\n    Skin1:0xc58c85,\r\n    Skin2:0xecbcb4,\r\n    Skin3:0xd1a3a4,\r\n    Skin4:0xa1665e,\r\n    Skin5:0x503335,\r\n    Skin6:0x592f2a,\r\n}\r\n\r\nconst clothColors={\r\n    gray: 0x888888,\r\n    Green1:0x69F0AE,\r\n    Purple:0x651FFF,\r\n    indigo:0x3D5AFE,\r\n    coolRed:0xFF1744,\r\n}\r\n\r\nconst Colors ={\r\n  yellow:0xFFEB3B,\r\n  gray: 0xaaaaaa,\r\n  Green1:0x69F0AE,\r\n  cyan:0x00E5FF,\r\n  Teal:0x1DE9B6,\r\n  Purple:0x651FFF,\r\n  indigo:0x3D5AFE,\r\n  coolRed:0xFF1744,\r\n  Pink:0xF50057,\r\n\r\n};\r\n\r\n\r\n\r\nvar gluesethair ,gluesetface,gluesetcloth,gluesethat,gluesethair_mask\r\n\r\nfunction extract(atrr){\r\n    console.log(\"HEY YOU FUCK\",atrr)\r\n    // face = atrr.face\r\n    \r\n   const {hair,face,cloth,hat,hair_mask} = atrr\r\n   console.log(\"XJKL\",face)\r\n    gluesethair(hair)\r\n    gluesetface(face)\r\n    gluesetcloth(cloth)\r\n    gluesethat(hat)\r\n    gluesethair_mask(hair_mask)\r\n    // cloth = atrr.cloth\r\n    return atrr\r\n}\r\n\r\nfunction UI() {\r\nconst [hair, sethair] = useState(undefined);\r\nconst [hat, sethat] = useState(undefined);\r\nconst [face, setface] = useState(null);\r\nconst [cloth, setcloth] = useState(undefined);\r\nconst [hair_mask, sethair_mask] = useState(undefined);\r\n\r\ngluesethair =sethair\r\ngluesetface=setface\r\ngluesetcloth = setcloth\r\ngluesethat = sethat\r\ngluesethair_mask = sethair_mask\r\n\r\nconst Allhairs={\r\n  bold:{visible:[]},\r\n  hair:{visible:[hair]},\r\n  hat:{visible:[hat,hair_mask]}\r\n}\r\n\r\n  return (\r\n      <React.Fragment>\r\n        <div className=\"l-panel panel\">\r\n             {/* {hair!==undefined?<AvatarChangeColor title=\"Hair Color\" mesh={hair}   colors={hairColors}/>:null} */}\r\n\r\n         {cloth!==undefined?<AvatarChangeColor title=\"Cloth Color\" mesh={cloth} colors={clothColors}/> :null}\r\n        </div>\r\n         <div className=\"r-panel panel\">\r\n            {face!==undefined?  <AvatarChangeColor title=\"Face Color\" mesh={face}  colors={faceColors}/>:null} \r\n          {/* <AvatarChangeVisible title=\"hair style\" Allmeshes={Allhairs}/> */}\r\n         <BGChange title=\"Background Color\" mesh={cloth} colors={Colors}/> \r\n        </div> \r\n        </React.Fragment>\r\n  );\r\n}\r\n\r\nexport  {UI,extract};\r\n\r\n\r\n\r\n\r\n","C:\\Users\\pc\\Desktop\\avatar\\src\\Animate.js",["77","78","79"],"C:\\Users\\pc\\Desktop\\avatar\\src\\setup.js",["80"],"C:\\Users\\pc\\Desktop\\avatar\\src\\AvatarChange.js",["81","82","83","84","85"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { sceneSetup, scene, changeSceneBackground ,takeScreenshot ,render} from \"./setup\";\r\n\r\n\r\nexport default function AC({ title , mesh , colors  }) {\r\n  const bgs = {\r\n    gray: 0xaaaaaa,\r\n    yellow:0xFFEB3B,\r\n    Green1:0x69F0AE,\r\n    cyan:0x00E5FF,\r\n    Teal:0x1DE9B6,\r\n    Purple:0x651FFF,\r\n    indigo:0x3D5AFE,\r\n    coolRed:0xFF1744,\r\n    Pink:0xF50057,\r\n    red: 0xff0000,\r\n    green: 0x00ff00,\r\n    blue: 0x0000ff,\r\n  };\r\n  const bgsNames = Object.keys(bgs);\r\n\r\n  const [activeBGIndex, setactiveBGIndex] = useState(0);\r\n  useEffect(() => {\r\n    changeSceneBackground(bgs[bgsNames[activeBGIndex]]);\r\n  }, []);\r\n\r\n  function syencChangeBackground(index) {\r\n    setactiveBGIndex(index);\r\n    changeSceneBackground(bgs[bgsNames[index]]);\r\n    render()\r\n  }\r\n\r\n  function onBGChange(index) {\r\n    //   index == 1 => left , index==0 => right\r\n\r\n    if (index) {\r\n      activeBGIndex < bgsNames.length - 1\r\n        ? syencChangeBackground(activeBGIndex + 1)\r\n        : syencChangeBackground(0);\r\n    } else {\r\n        activeBGIndex > 0\r\n        ? syencChangeBackground(activeBGIndex - 1)\r\n        : syencChangeBackground(bgsNames.length - 1);\r\n    }\r\n  }\r\n\r\n  return (\r\n      \r\n    <div className=\"box\">\r\n        <div className=\"title\">{title}</div>\r\n        <div className=\"change\">\r\n            <button className=\"l-btn btn\" onClick={()=>onBGChange(0)}>{`<`}</button>\r\n            <span className=\"center\">{bgsNames[activeBGIndex]}</span>\r\n            <button className=\"r-btn btn\" onClick={()=>onBGChange(1)}>{`>`}</button>\r\n        </div>\r\n    </div>\r\n    // <div className=\"container\">\r\n    //   <button onClick={() => onBGChange(0)}>{`<`}</button>\r\n    //   <span className=\"title\">{bgsNames[activeBGIndex]}</span>\r\n    //   <button onClick={() => onBGChange(1)}>{`>`}</button>\r\n      // <button onClick={()=>takeScreenshot(2000 ,2000 )} className=\"SH\">Take SH</button>\r\n    // </div>\r\n  );\r\n}\r\n\r\n\r\n//clean up to prevent memory leak\r\n//   componentWillUnmount() {\r\n//     window.cancelAnimationFrame(requestID);\r\n//     controls.dispose();\r\n//   }\r\n","C:\\Users\\pc\\Desktop\\avatar\\src\\UI\\AvatarChangeColor.js",["86","87"],"import * as THREE from \"three\";\r\nimport React, { useState,useEffect} from \"react\";\r\nimport { sceneSetup, scene ,render} from \"../setup\";\r\n\r\nfunction changeColor(mesh,color){\r\n  console.log(\"Change color\", mesh)\r\n  mesh.material.color = new THREE.Color(color)\r\n}\r\n\r\n// changeColor(cloth,0xf07f7f)\r\n// changeColor(cloth,0x714141)\r\n// changeColor(hair,0x4e1325)\r\n// changeColor(face,0xa5977e)\r\n\r\nexport default function Cat({ title , mesh , colors  }) {\r\n  const colNames = Object.keys(colors);\r\nconsole.log(\"FOOOL\",mesh)\r\n  const [activeBGIndex, setactiveBGIndex] = useState(0);\r\n  useEffect(() => {\r\n    // changeColor(mesh,colors[colNames[activeBGIndex]])\r\n    // changeSceneBackground(colors[colNames[activeBGIndex]]);\r\n  }, []);\r\n\r\n  function syencChangeBackground(index) {\r\n    setactiveBGIndex(index);\r\n    changeColor(mesh,colors[colNames[index]])\r\n    render()\r\n\r\n    // changeSceneBackground(colors[colNames[index]]);\r\n  }\r\n\r\n  function handleChange(index) {\r\n    //   index == 1 => left , index==0 => right\r\n\r\n    if (index) {\r\n      activeBGIndex < colNames.length - 1\r\n        ? syencChangeBackground(activeBGIndex + 1)\r\n        : syencChangeBackground(0);\r\n    } else {\r\n        activeBGIndex > 0\r\n        ? syencChangeBackground(activeBGIndex - 1)\r\n        : syencChangeBackground(colNames.length - 1);\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    \r\n    <div className=\"box\">\r\n        <div className=\"title\">{title}</div>\r\n        <div className=\"change\">\r\n            <button className=\"l-btn btn\" onClick={()=>handleChange(1)}>{`<`}</button>\r\n            <span className=\"center\">{colNames[activeBGIndex]}</span>\r\n            <button className=\"r-btn btn\" onClick={()=>handleChange(0)}>{`>`}</button>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\pc\\Desktop\\avatar\\src\\UI\\AvatarChangeVisible.js",["88","89","90"],"import * as THREE from \"three\";\r\nimport React, { useState,useEffect} from \"react\";\r\nimport { sceneSetup, scene ,render} from \"../setup\";\r\n\r\nfunction hideAllhair(hairs){\r\n    const meshNames = Object.keys(hairs);\r\n     meshNames.forEach(meshname=>{\r\n      hairs[meshname].visible.forEach(hvisible=> hvisible.visible=false)\r\n    })    \r\n  }\r\n\r\n  function show(hairs,hair){\r\n      console.log(hairs,hair)\r\n    hideAllhair(hairs)\r\n    hair.visible.forEach(hvisible=>{\r\n        hvisible.visible=true\r\n    })\r\n    render()\r\n  }\r\n\r\nexport default function AvatarVisible({ title , Allmeshes   }) {\r\n  const meshNames = Object.keys(Allmeshes);\r\n\r\n  const [activeMeshIndex, setactiveMeshIndex] = useState(0);\r\n  useEffect(() => {\r\n    // changeColor(mesh,Allmeshes[meshNames[activeMeshIndex]])\r\n    // syencChangeBackground(0)\r\n    // changeSceneBackground(Allmeshes[meshNames[activeMeshIndex]]);\r\n  }, []);\r\n\r\n  function syencChangeBackground(index) {\r\n    setactiveMeshIndex(index);\r\n    show(Allmeshes,Allmeshes[meshNames[index]])\r\n    render()\r\n\r\n    // changeSceneBackground(Allmeshes[meshNames[index]]);\r\n  }\r\n\r\n  function handleChange(index) {\r\n    //   index == 1 => left , index==0 => right\r\n    if (index) {\r\n      activeMeshIndex < meshNames.length - 1\r\n        ? syencChangeBackground(activeMeshIndex + 1)\r\n        : syencChangeBackground(0);\r\n    } else {\r\n        activeMeshIndex > 0\r\n        ? syencChangeBackground(activeMeshIndex - 1)\r\n        : syencChangeBackground(meshNames.length - 1);\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    \r\n    <div className=\"box\">\r\n        <div className=\"title\">{title}</div>\r\n        <div className=\"change\">\r\n            <button className=\"l-btn btn\" onClick={()=>handleChange(1)}>{`<`}</button>\r\n            <span className=\"center\">{meshNames[activeMeshIndex]}</span>\r\n            <button className=\"r-btn btn\" onClick={()=>handleChange(0)}>{`>`}</button>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\pc\\Desktop\\avatar\\src\\settings.js",[],"C:\\Users\\pc\\Desktop\\avatar\\src\\helpers.js",[],"C:\\Users\\pc\\Desktop\\avatar\\src\\ScreenShot.js",[],"C:\\Users\\pc\\Desktop\\avatar\\src\\sceneItems.js",["91","92"],"C:\\Users\\pc\\Desktop\\avatar\\src\\ModelLoader.js",[],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":1,"column":17,"nodeType":"99","messageId":"100","endLine":1,"endColumn":25},{"ruleId":"97","severity":1,"message":"101","line":2,"column":22,"nodeType":"99","messageId":"100","endLine":2,"endColumn":27},{"ruleId":"102","severity":1,"message":"103","line":22,"column":76,"nodeType":"104","endLine":22,"endColumn":90},{"ruleId":"97","severity":1,"message":"105","line":4,"column":8,"nodeType":"99","messageId":"100","endLine":4,"endColumn":27},{"ruleId":"97","severity":1,"message":"106","line":7,"column":9,"nodeType":"99","messageId":"100","endLine":7,"endColumn":15},{"ruleId":"97","severity":1,"message":"107","line":10,"column":7,"nodeType":"99","messageId":"100","endLine":10,"endColumn":17},{"ruleId":"97","severity":1,"message":"108","line":82,"column":7,"nodeType":"99","messageId":"100","endLine":82,"endColumn":15},{"ruleId":"97","severity":1,"message":"109","line":3,"column":10,"nodeType":"99","messageId":"100","endLine":3,"endColumn":15},{"ruleId":"97","severity":1,"message":"110","line":3,"column":25,"nodeType":"99","messageId":"100","endLine":3,"endColumn":33},{"ruleId":"97","severity":1,"message":"111","line":4,"column":5,"nodeType":"99","messageId":"100","endLine":4,"endColumn":10},{"ruleId":"97","severity":1,"message":"112","line":162,"column":7,"nodeType":"99","messageId":"100","endLine":162,"endColumn":17},{"ruleId":"97","severity":1,"message":"113","line":1,"column":38,"nodeType":"99","messageId":"100","endLine":1,"endColumn":44},{"ruleId":"97","severity":1,"message":"114","line":2,"column":10,"nodeType":"99","messageId":"100","endLine":2,"endColumn":20},{"ruleId":"97","severity":1,"message":"101","line":2,"column":22,"nodeType":"99","messageId":"100","endLine":2,"endColumn":27},{"ruleId":"97","severity":1,"message":"115","line":2,"column":52,"nodeType":"99","messageId":"100","endLine":2,"endColumn":66},{"ruleId":"116","severity":1,"message":"117","line":25,"column":6,"nodeType":"118","endLine":25,"endColumn":8,"suggestions":"119"},{"ruleId":"97","severity":1,"message":"114","line":3,"column":10,"nodeType":"99","messageId":"100","endLine":3,"endColumn":20},{"ruleId":"97","severity":1,"message":"101","line":3,"column":22,"nodeType":"99","messageId":"100","endLine":3,"endColumn":27},{"ruleId":"97","severity":1,"message":"120","line":1,"column":13,"nodeType":"99","messageId":"100","endLine":1,"endColumn":18},{"ruleId":"97","severity":1,"message":"114","line":3,"column":10,"nodeType":"99","messageId":"100","endLine":3,"endColumn":20},{"ruleId":"97","severity":1,"message":"101","line":3,"column":22,"nodeType":"99","messageId":"100","endLine":3,"endColumn":27},{"ruleId":"97","severity":1,"message":"121","line":17,"column":10,"nodeType":"99","messageId":"100","endLine":17,"endColumn":22},{"ruleId":"97","severity":1,"message":"122","line":64,"column":10,"nodeType":"99","messageId":"100","endLine":64,"endColumn":32},"no-native-reassign",["123"],"no-negated-in-lhs",["124"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'scene' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'AvatarChangeVisible' is defined but never used.","'render' is defined but never used.","'hairColors' is assigned a value but never used.","'Allhairs' is assigned a value but never used.","'stats' is defined but never used.","'controls' is defined but never used.","'clock' is assigned a value but never used.","'glitchPass' is assigned a value but never used.","'useRef' is defined but never used.","'sceneSetup' is defined but never used.","'takeScreenshot' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'activeBGIndex', 'bgs', and 'bgsNames'. Either include them or remove the dependency array.","ArrayExpression",["125"],"'THREE' is defined but never used.","'addBacklight' is defined but never used.","'setDirectionalLighting' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"126","fix":"127"},"Update the dependencies array to be: [activeBGIndex, bgs, bgsNames]",{"range":"128","text":"129"},[675,677],"[activeBGIndex, bgs, bgsNames]"]